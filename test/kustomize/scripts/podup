#!/usr/bin/env bash
#
# Checks to see if a pod is up. Can't just kubectl wait --for in the Make because the recipe step
# executes before the pod actually gets created and causes an immediate error. And looping in Make
# is cumbersome. So the looping is handled here. Arg one is some logical thing to wait for.
#

# arg two is to support 'kubectl' and 'microk8s kubectl'
KUBECTL="$2"

what=pod
for=condition=ready

case "$1" in
  PGO) # PGO operator
    expr="-l name=postgres-operator"
    ;;
  CRUNCHY) # Postgres cluster
    expr="-l pgo-pg-database=true"
    ;;
  STRIMZI) # Strimzi cluster operator
    expr="-l name=strimzi-cluster-operator"
    ;;
  KAFKA) # Kafka cluster
    expr="-l strimzi.io/name=strimzi-kafka"
    ;;
  ECK) # ECK operator
    expr="-l control-plane=elastic-operator"
    ;;
  ELASTIC) # Elastic cluster
    expr="-l elasticsearch.k8s.elastic.co/cluster-name=elastic"
    ;;
  PERCONA) # Percona MongoDB operator
    expr="-l name=percona-server-mongodb-operator"
    ;;
  PMONGO) # Percona MongoDB cluster
    what=perconaservermongodb/percona-mongo
    for="condition=clusterready"
    expr=
    ;;
  *)
    exit 1
    ;;
esac

max=120
for ((i=0; i<$max; i++)); do
  if $KUBECTL wait $what -n backing $expr --for $for --timeout=1s &>/dev/null; then
    exit 0
  fi
  sleep 1s
done
exit 1
