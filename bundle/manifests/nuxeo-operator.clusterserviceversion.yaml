apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "appzygy.net/v1alpha1",
          "kind": "Nuxeo",
          "metadata": {
            "name": "nuxeo-sample"
          },
          "spec": {
            "access": {
              "hostname": "nuxeo-server.apps-crc.testing"
            },
            "nodeSets": [
              {
                "interactive": true,
                "name": "cluster",
                "nuxeoConfig": {
                  "nuxeoPackages": [
                    "nuxeo-web-ui"
                  ]
                },
                "replicas": 1
              }
            ],
            "nuxeoImage": "nuxeo:LTS-2019",
            "version": "10.10"
          }
        }
      ]
    capabilities: Basic Install
    categories: Application Runtime
    certified: "false"
    containerImage: docker.io/appzygy/nuxeo-operator:0.7.1
    createdAt: 2020-09-26T00:00:00Z
    support: https://github.com/aceeric/nuxeo-operator
    repository: https://github.com/aceeric/nuxeo-operator
    description: |
      The Nuxeo Operator manages a Nuxeo cluster, integrating it
      with backing services like Kafka, Elastic Search, MongoDB, and PostgreSQL
    operators.operatorframework.io/builder: operator-sdk-v1.0.0
    operators.operatorframework.io/project_layout: go.kubebuilder.io/v2
  name: nuxeo-operator.v0.7.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Represents a Nuxeo Cluster
      displayName: Nuxeo
      kind: Nuxeo
      name: nuxeos.appzygy.net
      version: v1alpha1
  description: |
    The Nuxeo Operator manages a Nuxeo cluster and integrates it with backing services like
    Kafka, Elastic Search, MongoDB, and PostgreSQL. The operator supports the ability to configure many Nuxeo
    runtime options, like JAVA_OPTS, templates, nuxeo.conf settings, custom contributions, cluster size,
    and so on. Backing service integration is done declaratively. And some backing services are supported via
    built-in configurations so that with just a few lines of YAML is is possible to run Nuxeo with those
    backing services.
  displayName: Nuxeo Operator
  icon:
  - base64data: ""
    mediatype: ""
  install:
    spec:
      clusterPermissions:
      - rules:
        - apiGroups:
          - appzygy.net
          resources:
          - nuxeos
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - appzygy.net
          resources:
          - nuxeos/status
          - nuxeos/finalizers
          verbs:
          - get
          - patch
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - serviceaccounts
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          - routes/custom-host
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - networking.k8s.io
          resources:
          - ingresses
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - authentication.k8s.io
          resources:
          - tokenreviews
          verbs:
          - create
        - apiGroups:
          - authorization.k8s.io
          resources:
          - subjectaccessreviews
          verbs:
          - create
        serviceAccountName: nuxeo-operator-manager
      deployments:
      - name: nuxeo-operator-controller-manager
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: nuxeo-operator
              control-plane: controller-manager
          strategy: {}
          template:
            metadata:
              labels:
                app: nuxeo-operator
                control-plane: controller-manager
            spec:
              containers:
              - args:
                - --metrics-addr=127.0.0.1:8080
                - --enable-leader-election
                command:
                - /manager
                env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                image: docker.io/appzygy/nuxeo-operator:0.7.1
                name: manager
                resources:
                  limits:
                    cpu: 100m
                    memory: 300Mi
                  requests:
                    cpu: 100m
                    memory: 300Mi
              - args:
                - --secure-listen-address=0.0.0.0:8443
                - --upstream=http://127.0.0.1:8080/
                - --logtostderr=true
                - --v=10
                image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
                name: kube-rbac-proxy
                ports:
                - containerPort: 8443
                  name: https
                resources: {}
              serviceAccountName: nuxeo-operator-manager
              terminationGracePeriodSeconds: 10
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - configmaps
          verbs:
          - get
          - list
          - watch
          - create
          - update
          - patch
          - delete
        - apiGroups:
          - ""
          resources:
          - configmaps/status
          verbs:
          - get
          - update
          - patch
        - apiGroups:
          - ""
          resources:
          - events
          verbs:
          - create
          - patch
        serviceAccountName: nuxeo-operator-manager
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: true
    type: MultiNamespace
  - supported: true
    type: AllNamespaces
  keywords:
  - nuxeo
  - digital
  - asset
  - management
  - kafka
  - elasticsearch
  - postgres
  - mongodb
  links:
  - name: Nuxeo Operator
    url: https://github.com/aceeric/nuxeo-operator
  - name: Nuxeo Digital Asset Management
    url: https://www.nuxeo.com/
  maturity: alpha
  maintainers:
  - name: Eric Ace
  provider:
    name: Eric Ace
  version: 0.7.1
