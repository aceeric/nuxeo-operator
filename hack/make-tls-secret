#!/usr/bin/env bash
#
# This is a convenience script to generate a TLS secret to configure the Nginx sidecar to terminate SSL.
# This script supports testing/development. The script assumes the availability of the `openssl` command.
#

workdir="$(cd "$(dirname "${BASH_SOURCE[0]}")/../tmp" && pwd)"

openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:2048 \
 -keyout $workdir/nginx-selfsigned.key \
 -out $workdir/nginx-selfsigned.crt \
 -subj "/C=US/ST=Maryland/L=Somewhere/O=IT/CN=nuxeo-server.apps-crc.testing"

if [[ $? -ne 0 ]]; then
  echo "openssl failed to generate a cert and key"
  exit 1
fi

openssl dhparam -out $workdir/nginx-dhparam-2048.pem 2048

if [[ $? -ne 0 ]]; then
  echo "openssl failed to generate a dhparam file"
  exit 1
fi

rm $workdir/tls-secret.yaml

cat <<EOF > $workdir/tls-secret.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: tls-secret
stringData:
  tls.key: |
EOF
sed -e 's/^/    /' $workdir/nginx-selfsigned.key >> $workdir/tls-secret.yaml
echo '  tls.crt: |' >> $workdir/tls-secret.yaml
sed -e 's/^/    /' $workdir/nginx-selfsigned.crt >> $workdir/tls-secret.yaml
echo '  dhparam: |' >> $workdir/tls-secret.yaml
sed -e 's/^/    /' $workdir/nginx-dhparam-2048.pem >> $workdir/tls-secret.yaml

echo "Secret YAML was created. Create the secret with this command: oc apply -f $workdir/tls-secret.yaml"
